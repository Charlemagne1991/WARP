/**************************************************************************\
*                                                                          *
*   Copyright (C) 2020 Neo Mind                                            *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Functor, Jchcc, Neo-Mind                               *
*   Created Date  : 2020-11-11                                             *
*   Last Modified : 2020-11-24                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief NOP out codes for disabling the CGameMode::m_lastLockOnPcGid assignment to ignore shift right click.
///        The assignment occurs inside CGameMode::ProcessPcPick function.
///
NoAutoFollow = function()
{
    /// 1 - Find the m_lastLockOnPcGid assignment (matches multiple locations)
    let prefix =
        PUSH_1                       //PUSH 1
    +   PUSH(' [00011..0]')          //PUSH 1A or 1C
	;
	
	if (Exe.Version < 14.0)
		prefix +=  MOV(ECX, ESI);    //MOV ECX, ESI
	
    if (Exe.Version < 9.0 ||  Exe.Version >= 11.0
	)
		prefix += CALL([R32, WCp]);  //CALL DWORD PTR DS:[reg32_A+x]
	else
		prefix += CALL(R32);         //CALL reg32_A

	let suffix;
    if (Exe.Version < 9.0)
	{
		prefix += MOV(R32, [R32, POS2WC]);	//MOV R32, DWORD PTR DS:[reg32_C+const]
        suffix = MOV([POS3WC], R32); 	    //MOV DWORD PTR DS:[CGameMode::m_lastLockOnPcGid], reg32_D
	}
	else
	{
		prefix += MOV(EAX, [R32, POS2WC]);	//MOV EAX, DWORD PTR DS:[reg32_C+const]
		suffix = MOV([POS4WC], EAX); 	    //MOV DWORD PTR DS:[CGameMode::m_lastLockOnPcGid], EAX
	}
	
    let addr = Exe.FindHex(prefix + suffix);
    if (addr < 0)
        throw Error("No matches found for assignment");

    /// 2 - NOP out the assignment
	let ins = Instr.FromAddr(addr + prefix.byteCount());
	Exe.SetNOPs(ins.Addr, ins.Size);
	
	return true;
};

///
/// \brief Change the limit value used for comparison against lastFollowTime
///
DecrAFDelay = function() 
{
	/// 1 - Find the delay comparison
	let code =
		CALL(EDI)			//CALL EDI                     ; timeGetTime
	+	SUB(EAX, [POS4WC])	//SUB EAX, DWORD PTR DS:[addr] ; lastFollowTime
	+	CMP(EAX, 0x3E8)		//CMP EAX, 3E8                 ; 1000ms
	;
	
	let addr = Exe.FindHex(code);
	if (addr < 0)
		throw Error("Delay comparison missing");
		
	/// 2 - Get the new value from the user
	let newDelay = Exe.GetUserInput('$followDelay', D_Uint32, "Delay Value", "Enter the new autofollow delay", 1000, {max: 1000});
	if (newDelay === false)
		throw "Cancelled - Delay reverted to 1000";
	
	/// 3 - Replace the old value
	Exe.SetFromVar(addr + code.byteCount() - 4, '$followDelay');
	
	return true;
};