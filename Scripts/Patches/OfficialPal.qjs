/**************************************************************************\
*                                                                          *
*   Copyright (C) 2020 Neo Mind                                            *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author       : Neo-Mind                                                *
*   Created Date : 2020-11-11                                              *
*   Last Modified: 2020-11-11                                              *
*                                                                          *
\**************************************************************************/

///
/// \brief NOPs out the conditional jump after Langtype comparison when loading Palette prefixes
///        The prefixes are loaded into Palette Table in CSession::InitJobTable
///
OfficialPal = function()
{
    /// 1.1 - Check if Custom Job patch is being used (unless test mode is ON)
    if (!Exe.TestMode && Exe.IsSelected("EnableCustomJobs"))
        throw Error("Cannot work while Custom Job patch is ON");

    /// 1.2 - Find the location of 'Å©·ç' 
	///       (Palette prefix for Knight - Same string is used for job path as well as imf)
	///
    let knightAddr = Exe.FindAscii("\xC5\xA9\xB7\xE7");
    if (knightAddr < 0)
        throw Error("Palette prefix not found");

    /// 1.3 - Find all locations where it is assigned
	let code = Exe.Version >= 9.0 ?
        MOV([R32, 0x38], knightAddr)    //MOV DWORD PTR DS:[reg32_A + 38], knightAddr
    :
        MOV([EAX], knightAddr) + CALL() //MOV DWORD PTR DS:[EAX], knightAddr followed by CALL
    ;
    let addrs = Exe.FindHexN(code);

    /// 2.1 - Find the conditional jump (JNE) before one of the assignments - only 1 will have it
    let addr = -1;
	if (addrs.find( memAddr =>
	{
		addr = Exe.FindHex( JNE(POS2WC), memAddr - 0x20, memAddr);
        return (addr > 0);
    }) === undefined
	)
        throw Error("Prefix reference not found");

    /// 2.2 - NOP out the conditional jump
    Exe.SetNOPs(addr, 6);
    return true;
};