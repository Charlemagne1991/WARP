/**************************************************************************\
*                                                                          *
*   Copyright (C) 2018-2021 Andrei Karas (4144)                            *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Andrei (4144)                                          *
*   Created Date  : 2021-03-06                                             *
*   Last Modified : 2021-03-06                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief Hide date based on zero values (1969-01-01) in guilds member window
///
HideZeroDateInGuildWin = function()
{
	/// 1.1 - Find the location where the 'Msg strings' are fetched in UIGuildMemberManageWnd_virt68
	let parts =
	[//0
		CALL([POS3WC])
	,//1
		ADD(ESP, 4)
	+	PUSH_EAX
	+	PUSH(0xBC3)
	,//2
		CALL(ALLWC)
	,//3
		ADD(ESP, 4)
	+	PUSH_EAX
	,//4
	 	LEA(EAX, [EBP, ALLWC])
	+	PUSH(0x80)
	+	PUSH_EAX
	+	CALL([POS3WC])
	+	ADD(ESP, 0x10)
	,//5
		LEA(EAX, [EBP, ALLWC])
	+	PUSH_EAX
	+	PUSH(0xBC4)
	,//6
		CALL(ALLWC)
	];

	let code = parts.join('');
	let addr = Exe.FindHex(code);
	if (addr < 0)
		throw Error("Function not found");

	ShowAddr(addr);

	/// 1.2 - Calculate the different positional addresses & map the respective indices.
	let addrs = MapAddrs(addr, parts);
	let [lea1, lea2, call1, call2, retn1, retn2] = [4, 5, 2, 6, 1, 3]; //indices

	/// 1.3 - Ensure we dont have a false match
	if (Exe.GetTgtAddr(addrs[call1] + 1) !== Exe.GetTgtAddr(addrs[call2] + 1))
		throw Error("Mismatched function CALLs");

	let ins = Instr.FromAddr(addrs[lea1])
	if (ins.Disp !== Instr.FromAddr(addrs[lea2]).Disp)
		throw Error("Mismatched offsets");

	/// 1.4 - Extract the localTime32 function address
	let localTime32 = Exe.GetInt32(addr + 2);

	/// 2.1 - Prepare the new code
	code =
		CMP([EAX], 0)
	+	JZ(0xB)
	+	CALL([localTime32])
	+	JMP(Filler(1))
	+	POP(EAX)
	+	ins
	+	MOV([EAX], 0)
	+	JMP(Filler(2))
	;

	/// 2.2 - Allocate space for it
	let free = Exe.FindSpace(code.byteCount());
	if (free < 0)
		throw NO_ALLOC;

	let freeVir = Exe.Phy2Vir(free, DIFF);

	/// 2.3 - Fill in the blanks
	code = SetFillTargets(code,
	{
		1: Exe.Phy2Vir(addrs[retn1], CODE),
		2: Exe.Phy2Vir(addrs[retn2], CODE)
	}, freeVir, 1);

	/// 2.4 - Add to allocated space
	Exe.AddHex(free, code);

	/// 2.5 - Setup a JMP to our code at the starting address.
	Exe.SetJMP(addr, freeVir);

	return true;
};

///
/// \brief Disable for unsupported clients - Only 2017+ has it
///
HideZeroDateInGuildWin.validate = () => Exe.BuildDate > 20170000;
